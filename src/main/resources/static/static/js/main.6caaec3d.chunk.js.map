{"version":3,"sources":["service/BoardService.js","components/ListBoardComponent.jsx","components/HeaderComponent.jsx","components/FooterComponent.jsx","components/CreateBoardComponent.jsx","components/ReadBoardComponent.jsx","App.js","reportWebVitals.js","index.js"],"names":["BOARD_API_BASE_URL","axios","get","board","post","id","put","ListBoardComponent","props","state","createBoard","bind","BoardService","getBoards","then","res","setState","boards","data","this","history","push","className","onClick","map","readBoard","title","createdTime","upadtedTime","Component","HeaderComponent","href","FooterComponent","CreateBoardComponent","changeTypeHandler","event","type","target","value","changeTitleHandler","changeContentsHandler","contents","preventDefault","updateBoard","getOneBoard","getTitle","placeholder","name","onChange","cancel","style","marginLeft","ReadBoardComponent","match","params","console","log","typeNo","returnBoardType","htmlFor","rows","updatedTime","goToList","App","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6caaec3d.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst BOARD_API_BASE_URL = \"http://localhost:8080/api/board\"\n\nclass BoardService {\n\n    getBoards() {\n        return axios.get(BOARD_API_BASE_URL);\n    }\n\n    createBoard(board) {\n        return axios.post(BOARD_API_BASE_URL, board);\n    }\n\n    getOneBoard(id) {\n        return axios.get(BOARD_API_BASE_URL + \"/\" + id);\n    }\n\n    updateBoard(id, board) {\n        return axios.put(BOARD_API_BASE_URL + \"/\" + id, board);\n    }\n\n}\n\nexport default new BoardService();","import React, {Component} from 'react';\nimport BoardService from \"../service/BoardService\";\n\nclass ListBoardComponent extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            board: []\n        }\n\n        this.createBoard = this.createBoard.bind(this);\n    }\n\n    componentDidMount() {\n        BoardService.getBoards().then((res) => {\n            this.setState({boards: res.data});\n        });\n    }\n\n    createBoard() {\n        this.props.history.push('/create-board/_create');\n    }\n\n    readBoard(id) {\n        this.props.history.push(`/read-board/${id}`);\n    }\n\n    render() {\n        return (\n            <div>\n                <h2 className=\"text-center\">Board List</h2>\n\n                <div className=\"row\">\n                    <button className=\"btn btn-primary\" onClick={this.createBoard}>글 작성</button>\n                </div>\n                <div className=\"row mt-2\">\n                    <table className=\"table table-striped table-bordered\">\n                        <thead>\n                        <tr>\n                            <th>글 번호</th>\n                            <th>타이틀</th>\n                            <th>작성일</th>\n                            <th>갱신일</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        {\n                            this.state.boards && this.state.boards.map(\n                                board =>\n                                    <tr key={board.id}>\n                                        <td> {board.id} </td>\n                                        <td onClick={()=>this.readBoard(board.id)}> {board.title} </td>\n                                        <td> {board.createdTime} </td>\n                                        <td> {board.upadtedTime} </td>\n                                    </tr>\n                            )\n                        }\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ListBoardComponent;","import React, {Component} from 'react';\n\nclass HeaderComponent extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <header className=\"mb-2\">\n                    <nav className=\"navbar navbar-expand-md navbar-dark bg-dark\">\n                        <div><a href=\"https://localhost:3000\" className=\"navbar-brand\">Board App</a></div>\n                    </nav>\n                </header>\n            </div>\n        );\n    }\n}\n\nexport default HeaderComponent;","import React, {Component} from 'react';\n\nclass FooterComponent extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <footer className=\"footer mt-2\">\n                    <span className=\"text-muted\">start react app 2021</span>\n                </footer>\n            </div>\n        );\n    }\n}\n\nexport default FooterComponent;","import React, {Component} from 'react';\nimport BoardService from \"../service/BoardService\";\n\nclass CreateBoardComponent extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            type: '',\n            title: '',\n            contents: ''\n        }\n\n        this.changeTypeHandler = this.changeTypeHandler.bind(this);\n        this.changeTitleHandler = this.changeTitleHandler.bind(this);\n        this.changeContentsHandler = this.changeContentsHandler.bind(this);\n        this.createBoard = this.createBoard.bind(this);\n    }\n\n    changeTypeHandler = (event) => {\n        this.setState({type: event.target.value});\n    }\n\n    changeTitleHandler = (event) => {\n        this.setState({title: event.target.value});\n    }\n\n    changeContentsHandler = (event) => {\n        this.setState({contents: event.target.value});\n    }\n\n    createBoard = (event) => {\n        event.preventDefault();\n        let board = {\n            type: this.state.type,\n            title: this.state.title,\n            contents: this.state.contents\n        };\n\n        if (this.state.id === '_create') {\n            BoardService.createBoard(board).then(res => {\n                this.props.history.push('/board');\n            });\n        } else {\n            BoardService.updateBoard(this.state.id, board).then(res => {\n                this.props.history.push('/board');\n            });\n        }\n    }\n\n    cancel() {\n        this.props.history.push('/board');\n    }\n\n    getTitle() {\n        if (this.state.id === '_create') {\n            return <h3 className=\"text-center\">게시글 작성</h3>\n        } else {\n            return <h3 className=\"text-center\">게시글 수정</h3>\n        }\n    }\n\n    componentDidMount() {\n        if (this.state.id === '_create') {\n            return;\n        } else {\n            BoardService.getOneBoard(this.state.id).then((res) => {\n               let board = res.data;\n\n               this.setState({\n                   type: board.type,\n                   title: board.title,\n                   contents: board.contents\n               });\n            });\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <div className = \"container\">\n                    <div className = \"row\">\n                        <div className = \"card col-md-6 offset-md-3 offset-md-3\">\n                            {this.getTitle()}\n                            <div className = \"card-body\">\n                                <form>\n                                    <div className = \"form-group\">\n                                        <label> Type </label>\n                                        <select placeholder=\"type\" name=\"type\" className=\"form-control\"\n                                                value={this.state.type} onChange={this.changeTypeHandler}>\n                                            <option value=\"1\">자유게시판</option>\n                                            <option value=\"2\">질문과 답변</option>\n                                        </select>\n                                    </div>\n                                    <div className = \"form-group\">\n                                        <label> Title </label>\n                                        <input type=\"text\" placeholder=\"title\" name=\"title\" className=\"form-control\"\n                                               value={this.state.title} onChange={this.changeTitleHandler}/>\n                                    </div>\n                                    <div className = \"form-group\">\n                                        <label> Contents  </label>\n                                        <textarea placeholder=\"contents\" name=\"contents\" className=\"form-control\"\n                                                  value={this.state.contents} onChange={this.changeContentsHandler}/>\n                                    </div>\n                                    <button className=\"btn btn-success\" onClick={this.createBoard}>Save</button>\n                                    <button className=\"btn btn-danger\" onClick={this.cancel.bind(this)} style={{marginLeft:\"10px\"}}>Cancel</button>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default CreateBoardComponent;","import React, {Component} from 'react';\nimport BoardService from \"../service/BoardService\";\n\nclass ReadBoardComponent extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            id: this.props.match.params.id,\n            board: {}\n        }\n    }\n\n    componentDidMount() {\n        BoardService.getOneBoard(this.state.id).then(res => {\n            console.log(res.data);\n            this.setState({board: res.data})\n        });\n    }\n\n    returnBoardType(typeNo) {\n        let type = null;\n\n        switch (typeNo) {\n            case 1:\n                type = \"자유게시판\";\n                break;\n            case 2:\n                type = \"질문과 답변\";\n                break;\n            default:\n                type = \"타입 미지정\";\n                break;\n        }\n\n        return (\n            <div className=\"row\">\n                <label>Board Type : </label> {type}\n            </div>\n        );\n    }\n\n    updateBoard(id) {\n        this.props.history.push('/create-board/'+id);\n    }\n\n    goToList() {\n        this.props.history.push('/board');\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"card col-md-6 offset-md-3\">\n                    <h3 className=\"text-center\"> Read Detail</h3>\n                    <div className=\"card-body\">\n                        {this.returnBoardType(this.state.board.type)}\n                        <div className=\"row\">\n                            <label> Title </label> : {this.state.board.title}\n                        </div>\n\n                        <div className=\"row\">\n                            <div className=\"form-group\">\n                                <label htmlFor=\"exampleFormControlTextarea1\">Contents</label>\n                                <textarea className=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"3\" value={this.state.board.contents}/>\n                            </div>\n                        </div>\n\n                        <div className=\"row\">\n                            <label> 작성일 </label> : {this.state.board.createdTime}\n                        </div>\n                        <div className=\"row\">\n                            <label> 수정일 </label> : {this.state.board.updatedTime}\n                        </div>\n\n                        <button className=\"btn btn-primary\" onClick={this.goToList.bind(this)}\n                                style={{marginLeft: \"10px\"}}>글 목록으로 이동\n                        </button>\n                        <button className=\"btn btn-info\" onClick={this.updateBoard(this.state.board.id)}\n                                style={{marginLeft: \"10px\"}}>글 수정\n                        </button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ReadBoardComponent;","import './App.css';\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport ListBoardComponent from './components/ListBoardComponent';\nimport HeaderComponent from './components/HeaderComponent'\nimport FooterComponent from \"./components/FooterComponent\";\nimport CreateBoardComponent from './components/CreateBoardComponent';\nimport ReadBoardComponent from './components/ReadBoardComponent';\n\nfunction App() {\n    return (\n        <div>\n            <Router>\n                <HeaderComponent/>\n                    <div className=\"container\">\n                        <Switch>\n                            <Route path=\"/\" exact component={ListBoardComponent}/>\n                            <Route path=\"/board\" component={ListBoardComponent}/>\n                            <Route path=\"/create-board/:id\" component={CreateBoardComponent}/>\n                            <Route path=\"/read-board/:id\" component={ReadBoardComponent} />\n                        </Switch>\n                    </div>\n                <FooterComponent/>\n            </Router>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}